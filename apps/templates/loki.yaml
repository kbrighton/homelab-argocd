apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: loki
  namespace: argocd
  finalizers:
    - resources-finalizer.argocd.argoproj.io
spec:
  project: default
  source:
    repoURL: https://grafana.github.io/helm-charts
    targetRevision: 6.45.1
    chart: loki
    helm:
      values: |
        global:
          dnsService: "rke2-coredns-rke2-coredns"

        chunksCache:
          enabled: true
          allocatedMemory: 1024

        write:
          replicas: 1
          persistence:
            storageClass: "synostorage"
          extraArgs:
            - '-config.expand-env=true'
          extraEnv:
            - name: GRAFANALOKIS3ENDPOINT
              valueFrom:
                secretKeyRef:
                  name: minio-test
                  key: endpoint
            - name: GRAFANALOKIS3ACCESKEYID
              valueFrom:
                secretKeyRef:
                  name: minio-test
                  key: access_key_id
            - name: GRAFANALOKIS3SECRETACCESSKEY
              valueFrom:
                secretKeyRef:
                  name: minio-test
                  key: access_key_secret
        read:
          replicas: 1
          persistence:
            storageClass: "synostorage"
          extraArgs:
            - '-config.expand-env=true'
          extraEnv:
            - name: GRAFANALOKIS3ENDPOINT
              valueFrom:
                secretKeyRef:
                  name: minio-test
                  key: endpoint
            - name: GRAFANALOKIS3ACCESKEYID
              valueFrom:
                secretKeyRef:
                  name: minio-test
                  key: access_key_id
            - name: GRAFANALOKIS3SECRETACCESSKEY
              valueFrom:
                secretKeyRef:
                  name: minio-test
                  key: access_key_secret

        backend:
          persistence:
            storageClass: "synostorage"
          extraArgs:
            - '-config.expand-env=true'
          extraEnv:
            - name: GRAFANALOKIS3ENDPOINT
              valueFrom:
                secretKeyRef:
                  name: minio-test
                  key: endpoint
            - name: GRAFANALOKIS3ACCESKEYID
              valueFrom:
                secretKeyRef:
                  name: minio-test
                  key: access_key_id
            - name: GRAFANALOKIS3SECRETACCESSKEY
              valueFrom:
                secretKeyRef:
                  name: minio-test
                  key: access_key_secret
          replicas: 1
        loki:
          storage:
            type: "s3"
            s3:
              region: "us-east-1"
              endpoint: "${GRAFANALOKIS3ENDPOINT}"
              accessKeyId: "${GRAFANALOKIS3ACCESKEYID}"
              secretAccessKey: "${GRAFANALOKIS3SECRETACCESSKEY}"
              s3forcepathstyle: true
              insecure: true
            bucketNames:
              chunks: "loki-chunks"
              ruler: "loki-rules"
              admin: "loki-admin"

          schemaConfig:
            configs:
              - from: "2024-04-01"
                store: tsdb
                object_store: s3
                schema: v13
                index:
                  prefix: loki_index_
                  period: 24h
          ingester:
            chunk_encoding: snappy
          querier:
            # Default is 4, if you have enough memory and CPU you can increase, reduce if OOMing
            max_concurrent: 4
          pattern_ingester:
            enabled: true
          limits_config:
            allow_structured_metadata: true
            volume_enabled: true

          commonConfig:
            replication_factor: 1
          auth_enabled: false
        test:
          enabled: false
        storage:
          type: 'filesystem'
        minio:
          enabled: false

        monitoring:
          dashboards:
            enabled: true
          rules:
            enabled: true
          serviceMonitor:
            enabled: true
          selfMonitoring:
            enabled: false
        grafanaAgent:
          installOperator: false

  destination:
    server: https://kubernetes.default.svc
    namespace: monitoring
  syncPolicy:
    syncOptions:
      - ServerSideApply=true
    automated:
      prune: true
      selfHeal: true
